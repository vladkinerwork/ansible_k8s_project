Using /Users/olgakiner/ansible_k8s_project/ansible.cfg as config file

PLAY [Deploy Redis Database] ***************************************************

TASK [Gathering Facts] *********************************************************
ok: [deployment_coordinator]

TASK [Debug Namespace Variable] ************************************************
ok: [deployment_coordinator] => {
    "namespace": "<class 'jinja2.utils.Namespace'>"
}

TASK [Create a k8s namespace] **************************************************
changed: [deployment_coordinator] => {"changed": true, "method": "create", "result": {"apiVersion": "v1", "kind": "Namespace", "metadata": {"creationTimestamp": "2023-10-11T13:46:27Z", "labels": {"kubernetes.io/metadata.name": "redis-database-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2023-10-11T13:46:27Z"}], "name": "redis-database-dev", "resourceVersion": "594862", "uid": "5bc4a84d-5249-41cb-92b9-e287482c7cbb"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}}

TASK [redis : Create a Redis Configmap] ****************************************
changed: [deployment_coordinator] => {"changed": true, "method": "create", "result": {"apiVersion": "v1", "data": {"master.conf": "maxmemory 50mb\nmaxmemory-policy allkeys-lru\ndir /data\n", "slave.conf": "slaveof \"redis-ss-dev\"-0.redis-service.redis-database.svc.cluster.local 6379\nmaxmemory 50mb\nmaxmemory-policy allkeys-lru\ndir /data"}, "kind": "ConfigMap", "metadata": {"creationTimestamp": "2023-10-11T13:46:28Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:master.conf": {}, "f:slave.conf": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2023-10-11T13:46:28Z"}], "name": "redis-ss-dev-config", "namespace": "redis-database-dev", "resourceVersion": "594866", "uid": "74c051a7-d57b-4404-bdbd-10f69f61e2a7"}}}

TASK [redis : Create Redis Secret] *********************************************
changed: [deployment_coordinator] => {"changed": true, "method": "create", "result": {"apiVersion": "v1", "data": {"redis-password": "cmVkaXMtcGFzc3dvcmQ="}, "kind": "Secret", "metadata": {"creationTimestamp": "2023-10-11T13:46:29Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:redis-password": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2023-10-11T13:46:29Z"}], "name": "redis-ss-dev-secret", "namespace": "redis-database-dev", "resourceVersion": "594872", "uid": "d90a8f65-749a-4a6e-88bb-9324f7b1fc16"}, "type": "Opaque"}}

TASK [redis : Create service for Redis StatefulSet] ****************************
changed: [deployment_coordinator] => {"changed": true, "method": "create", "result": {"apiVersion": "v1", "kind": "Service", "metadata": {"creationTimestamp": "2023-10-11T13:46:30Z", "labels": {"app": "redis-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:app": {}}}, "f:spec": {"f:clusterIP": {}, "f:internalTrafficPolicy": {}, "f:ports": {".": {}, "k:{\"port\":6379,\"protocol\":\"TCP\"}": {".": {}, "f:name": {}, "f:port": {}, "f:protocol": {}, "f:targetPort": {}}}, "f:selector": {}, "f:sessionAffinity": {}, "f:type": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2023-10-11T13:46:30Z"}], "name": "redis-ss-dev-service", "namespace": "redis-database-dev", "resourceVersion": "594875", "uid": "788da9f9-051a-4627-b03b-40ae794e56dd"}, "spec": {"clusterIP": "None", "clusterIPs": ["None"], "internalTrafficPolicy": "Cluster", "ipFamilies": ["IPv4"], "ipFamilyPolicy": "SingleStack", "ports": [{"name": "redis-ss-dev", "port": 6379, "protocol": "TCP", "targetPort": 6379}], "selector": {"app": "redis-dev"}, "sessionAffinity": "None", "type": "ClusterIP"}, "status": {"loadBalancer": {}}}}

TASK [redis : Create Redis StatefulSet] ****************************************
changed: [deployment_coordinator] => {"changed": true, "method": "create", "result": {"apiVersion": "apps/v1", "kind": "StatefulSet", "metadata": {"creationTimestamp": "2023-10-11T13:46:31Z", "generation": 1, "managedFields": [{"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:podManagementPolicy": {}, "f:replicas": {}, "f:revisionHistoryLimit": {}, "f:selector": {}, "f:serviceName": {}, "f:template": {"f:metadata": {"f:labels": {".": {}, "f:app": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"redis\"}": {".": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"REDIS_PASSWORD\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {}}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/data\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/etc\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:initContainers": {".": {}, "k:{\"name\":\"init-redis\"}": {".": {}, "f:command": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {".": {}, "f:limits": {".": {}, "f:cpu": {}, "f:memory": {}}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/mnt/\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"config-map\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}}}}, "f:updateStrategy": {"f:rollingUpdate": {".": {}, "f:partition": {}}, "f:type": {}}, "f:volumeClaimTemplates": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2023-10-11T13:46:31Z"}], "name": "redis-ss-dev", "namespace": "redis-database-dev", "resourceVersion": "594883", "uid": "9a2d13cd-1f05-4088-b297-493473727fa0"}, "spec": {"podManagementPolicy": "OrderedReady", "replicas": 1, "revisionHistoryLimit": 10, "selector": {"matchLabels": {"app": "redis-dev"}}, "serviceName": "redis-ss-dev-service", "template": {"metadata": {"creationTimestamp": null, "labels": {"app": "redis-dev"}}, "spec": {"containers": [{"command": ["redis-server", "/etc/redis-config.conf"], "env": [{"name": "REDIS_PASSWORD", "valueFrom": {"secretKeyRef": {"key": "redis-password", "name": "redis-ss-dev-secret"}}}], "image": "redis:latest", "imagePullPolicy": "Always", "name": "redis", "ports": [{"containerPort": 6379, "name": "redis-ss-dev", "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/data", "name": "redis-data"}, {"mountPath": "/etc", "name": "redis-claim"}]}], "dnsPolicy": "ClusterFirst", "initContainers": [{"command": ["bash", "-c", "set -ex\n# Generate redis server-id from pod ordinal index.\n[[ `hostname` =~ -([0-9]+)$ ]] || exit 1\nordinal=${BASH_REMATCH[1]}\n# Copy appropriate redis config files from config-map to respective directories.\nif [[ $ordinal -eq 0 ]]; then\n  cp /mnt/master.conf /etc/redis-config.conf\nelse\n  cp /mnt/slave.conf /etc/redis-config.conf\nfi\n"], "image": "redis:latest", "imagePullPolicy": "Always", "name": "init-redis", "resources": {"limits": {"cpu": "200m", "memory": "100Mi"}, "requests": {"cpu": "100m", "memory": "50Mi"}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc", "name": "redis-claim"}, {"mountPath": "/mnt/", "name": "config-map"}]}], "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "terminationGracePeriodSeconds": 30, "volumes": [{"configMap": {"defaultMode": 420, "name": "redis-config"}, "name": "config-map"}]}}, "updateStrategy": {"rollingUpdate": {"partition": 0}, "type": "RollingUpdate"}, "volumeClaimTemplates": [{"apiVersion": "v1", "kind": "PersistentVolumeClaim", "metadata": {"creationTimestamp": null, "name": "redis-claim"}, "spec": {"accessModes": ["ReadWriteOnce"], "resources": {"requests": {"storage": "2Gi"}}, "storageClassName": "gp2", "volumeMode": "Filesystem"}, "status": {"phase": "Pending"}}, {"apiVersion": "v1", "kind": "PersistentVolumeClaim", "metadata": {"creationTimestamp": null, "name": "redis-data"}, "spec": {"accessModes": ["ReadWriteOnce"], "resources": {"requests": {"storage": "2Gi"}}, "storageClassName": "gp2", "volumeMode": "Filesystem"}, "status": {"phase": "Pending"}}]}, "status": {"availableReplicas": 0, "replicas": 0}}}

TASK [redis : Create HPA for Redis] ********************************************
changed: [deployment_coordinator] => {"changed": true, "method": "create", "result": {"apiVersion": "autoscaling/v2beta2", "kind": "HorizontalPodAutoscaler", "metadata": {"creationTimestamp": "2023-10-11T13:46:32Z", "managedFields": [{"apiVersion": "autoscaling/v2beta2", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:maxReplicas": {}, "f:metrics": {}, "f:minReplicas": {}, "f:scaleTargetRef": {"f:apiVersion": {}, "f:kind": {}, "f:name": {}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2023-10-11T13:46:32Z"}], "name": "redis-ss-dev-hpa", "namespace": "redis-database-dev", "resourceVersion": "594895", "uid": "c92d3396-0dce-4cb1-bb9a-538663fe4ec3"}, "spec": {"maxReplicas": 5, "metrics": [{"resource": {"name": "memory", "target": {"averageUtilization": 30, "type": "Utilization"}}, "type": "Resource"}], "minReplicas": 3, "scaleTargetRef": {"apiVersion": "apps/v1", "kind": "StatefulSet", "name": "redis-ss-dev"}}, "status": {"conditions": null, "currentMetrics": null, "currentReplicas": 0, "desiredReplicas": 0}}}

PLAY RECAP *********************************************************************
deployment_coordinator     : ok=8    changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

